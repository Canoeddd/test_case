{"name": "test_sec_coupon", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <img alt=\"get code\" loading=\"lazy\" width=\"606\" height=\"156\" decoding=\"async\" data-nimg=\"1\" class=\"w-[180px]\" srcset=\"https://www.couponpap.com/_next/static/media/code_button.379df9cf.png?w=640&amp;q=75 1x, https://www.couponpap.com/_next/static/media/code_button.379df9cf.png?w=1920&amp;q=75 2x\" src=\"https://www.couponpap.com/_next/static/media/code_button.379df9cf.png?w=1920&amp;q=75\" style=\"color: transparent;\"> is not clickable at point (1301, 812). Other element would receive the click: <iframe id=\"aswift_7\" name=\"aswift_7\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20240410/r20110914/zrt_lookup_fy2021.html#RS-1-&amp;adk=1812271801&amp;client=ca-pub-3083541566842724&amp;fa=1&amp;ifi=8&amp;uci=a!8&amp;btvi=5\" data-google-container-id=\"a!8\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CM6A1eWYvIUDFa1MwgUdNPwGJA\" data-load-complete=\"true\"></iframe>\n  (Session info: chrome=123.0.6312.122)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7728170C2+63090]\n\t(No symbol) [0x00007FF772782D12]\n\t(No symbol) [0x00007FF77261EC65]\n\t(No symbol) [0x00007FF77266BB34]\n\t(No symbol) [0x00007FF772669954]\n\t(No symbol) [0x00007FF772667164]\n\t(No symbol) [0x00007FF772665EF9]\n\t(No symbol) [0x00007FF77265A708]\n\t(No symbol) [0x00007FF772686FDA]\n\t(No symbol) [0x00007FF77265A00A]\n\t(No symbol) [0x00007FF7726871F0]\n\t(No symbol) [0x00007FF7726A3412]\n\t(No symbol) [0x00007FF772686D83]\n\t(No symbol) [0x00007FF7726583A8]\n\t(No symbol) [0x00007FF772659441]\n\tGetHandleVerifier [0x00007FF772C1262D+4238301]\n\tGetHandleVerifier [0x00007FF772C4F78D+4488509]\n\tGetHandleVerifier [0x00007FF772C47A6F+4456479]\n\tGetHandleVerifier [0x00007FF7728F0606+953270]\n\t(No symbol) [0x00007FF77278E5DF]\n\t(No symbol) [0x00007FF7727892B4]\n\t(No symbol) [0x00007FF7727893EB]\n\t(No symbol) [0x00007FF772779C24]\n\tBaseThreadInitThunk [0x00007FFB8B9C257D+29]\n\tRtlUserThreadStart [0x00007FFB8CB6AA48+40]", "trace": "self = <test_case.test_pap.TestPap object at 0x000002B695186A50>\n\n    def test_sec_coupon(self):\n        # log_file_path = r'..\\log\\站群.txt'\n        store_detail = TemuPap()\n    \n        try:\n>           affi_code2 = store_detail.sec_code()\n\ntest_case\\test_pap.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npy_page\\temu_p_pap.py:55: in sec_code\n    self.pap_temu.find_and_click(by_method, ele_codeA2)\npy_page\\base_p.py:45: in find_and_click\n    self.find(by, locator).click()                    # 点击\nC:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002B695215310>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF772779C24]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB8B9C257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFB8CB6AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <img alt=\"get code\" loading=\"lazy\" width=\"606\" height=\"156\" decoding=\"async\" data-nimg=\"1\" class=\"w-[180px]\" srcset=\"https://www.couponpap.com/_next/static/media/code_button.379df9cf.png?w=640&amp;q=75 1x, https://www.couponpap.com/_next/static/media/code_button.379df9cf.png?w=1920&amp;q=75 2x\" src=\"https://www.couponpap.com/_next/static/media/code_button.379df9cf.png?w=1920&amp;q=75\" style=\"color: transparent;\"> is not clickable at point (1301, 812). Other element would receive the click: <iframe id=\"aswift_7\" name=\"aswift_7\" style=\"width: 1005px !important; height: 124px !important; display: block; margin: 0px auto;\" sandbox=\"allow-forms allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts allow-top-navigation-by-user-activation\" width=\"1005\" height=\"124\" frameborder=\"0\" marginwidth=\"0\" marginheight=\"0\" vspace=\"0\" hspace=\"0\" allowtransparency=\"true\" scrolling=\"no\" src=\"https://googleads.g.doubleclick.net/pagead/html/r20240410/r20110914/zrt_lookup_fy2021.html#RS-1-&amp;adk=1812271801&amp;client=ca-pub-3083541566842724&amp;fa=1&amp;ifi=8&amp;uci=a!8&amp;btvi=5\" data-google-container-id=\"a!8\" tabindex=\"0\" title=\"Advertisement\" aria-label=\"Advertisement\" data-google-query-id=\"CM6A1eWYvIUDFa1MwgUdNPwGJA\" data-load-complete=\"true\"></iframe>\nE         (Session info: chrome=123.0.6312.122)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7728170C2+63090]\nE       \t(No symbol) [0x00007FF772782D12]\nE       \t(No symbol) [0x00007FF77261EC65]\nE       \t(No symbol) [0x00007FF77266BB34]\nE       \t(No symbol) [0x00007FF772669954]\nE       \t(No symbol) [0x00007FF772667164]\nE       \t(No symbol) [0x00007FF772665EF9]\nE       \t(No symbol) [0x00007FF77265A708]\nE       \t(No symbol) [0x00007FF772686FDA]\nE       \t(No symbol) [0x00007FF77265A00A]\nE       \t(No symbol) [0x00007FF7726871F0]\nE       \t(No symbol) [0x00007FF7726A3412]\nE       \t(No symbol) [0x00007FF772686D83]\nE       \t(No symbol) [0x00007FF7726583A8]\nE       \t(No symbol) [0x00007FF772659441]\nE       \tGetHandleVerifier [0x00007FF772C1262D+4238301]\nE       \tGetHandleVerifier [0x00007FF772C4F78D+4488509]\nE       \tGetHandleVerifier [0x00007FF772C47A6F+4456479]\nE       \tGetHandleVerifier [0x00007FF7728F0606+953270]\nE       \t(No symbol) [0x00007FF77278E5DF]\nE       \t(No symbol) [0x00007FF7727892B4]\nE       \t(No symbol) [0x00007FF7727893EB]\nE       \t(No symbol) [0x00007FF772779C24]\nE       \tBaseThreadInitThunk [0x00007FFB8B9C257D+29]\nE       \tRtlUserThreadStart [0x00007FFB8CB6AA48+40]\n\nC:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "start": 1712908329669, "stop": 1712908358278, "uuid": "8c16607e-8fa4-488f-82e1-18a7d9737154", "historyId": "ee6c3380e3fdda3ec3d82deef5c772dc", "testCaseId": "ee6c3380e3fdda3ec3d82deef5c772dc", "fullName": "test_case.test_pap.TestPap#test_sec_coupon", "labels": [{"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_pap"}, {"name": "subSuite", "value": "TestPap"}, {"name": "host", "value": "DESKTOP-LPVFBLF"}, {"name": "thread", "value": "23916-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_pap"}]}