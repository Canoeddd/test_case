{"uid":"98119862ac68f7d5","name":"test_first_coupon","fullName":"test_case.test_ofs.TestOfs#test_first_coupon","historyId":"f0a3dcf2cf0fb7a96713e49efc386b5d","time":{"start":1712903693779,"stop":1712903789554,"duration":95775},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//div[@class='flex cursor-pointer']/child::span)[1]\"}\n  (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF742E770C2+63090]\n\t(No symbol) [0x00007FF742DE2D12]\n\t(No symbol) [0x00007FF742C7EC65]\n\t(No symbol) [0x00007FF742CC499D]\n\t(No symbol) [0x00007FF742CC4ADC]\n\t(No symbol) [0x00007FF742D05B37]\n\t(No symbol) [0x00007FF742CE701F]\n\t(No symbol) [0x00007FF742D03412]\n\t(No symbol) [0x00007FF742CE6D83]\n\t(No symbol) [0x00007FF742CB83A8]\n\t(No symbol) [0x00007FF742CB9441]\n\tGetHandleVerifier [0x00007FF74327262D+4238301]\n\tGetHandleVerifier [0x00007FF7432AF78D+4488509]\n\tGetHandleVerifier [0x00007FF7432A7A6F+4456479]\n\tGetHandleVerifier [0x00007FF742F50606+953270]\n\t(No symbol) [0x00007FF742DEE5DF]\n\t(No symbol) [0x00007FF742DE92B4]\n\t(No symbol) [0x00007FF742DE93EB]\n\t(No symbol) [0x00007FF742DD9C24]\n\tBaseThreadInitThunk [0x00007FFB8B9C257D+29]\n\tRtlUserThreadStart [0x00007FFB8CB6AA48+40]","statusTrace":"self = <test_case.test_ofs.TestOfs object at 0x000001DA9A57A6F0>\n\n    def test_first_coupon(self):\n    \n        log_file_path = r'..\\log\\站群.txt'\n        store_detail = TemuOfs()\n    \n        try:\n>           affi_code1 = store_detail.first_code()\n\ntest_case\\test_ofs.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npy_page\\temu_p_ofs.py:37: in first_code\n    code_text = self.find(by_method, ele_code_text).text\npy_page\\base_p.py:35: in find\n    ele_find = self.driver.find_element(by, locator)# 定位单个元素\nC:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001DA9A5C68D0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF742DD9C24]\\\\n\\\\tBaseThreadInitThunk [0x00007FFB8B9C257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFB8CB6AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"(//div[@class='flex cursor-pointer']/child::span)[1]\"}\nE         (Session info: chrome=123.0.6312.122); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF742E770C2+63090]\nE       \t(No symbol) [0x00007FF742DE2D12]\nE       \t(No symbol) [0x00007FF742C7EC65]\nE       \t(No symbol) [0x00007FF742CC499D]\nE       \t(No symbol) [0x00007FF742CC4ADC]\nE       \t(No symbol) [0x00007FF742D05B37]\nE       \t(No symbol) [0x00007FF742CE701F]\nE       \t(No symbol) [0x00007FF742D03412]\nE       \t(No symbol) [0x00007FF742CE6D83]\nE       \t(No symbol) [0x00007FF742CB83A8]\nE       \t(No symbol) [0x00007FF742CB9441]\nE       \tGetHandleVerifier [0x00007FF74327262D+4238301]\nE       \tGetHandleVerifier [0x00007FF7432AF78D+4488509]\nE       \tGetHandleVerifier [0x00007FF7432A7A6F+4456479]\nE       \tGetHandleVerifier [0x00007FF742F50606+953270]\nE       \t(No symbol) [0x00007FF742DEE5DF]\nE       \t(No symbol) [0x00007FF742DE92B4]\nE       \t(No symbol) [0x00007FF742DE93EB]\nE       \t(No symbol) [0x00007FF742DD9C24]\nE       \tBaseThreadInitThunk [0x00007FFB8B9C257D+29]\nE       \tRtlUserThreadStart [0x00007FFB8CB6AA48+40]\n\nC:\\Users\\Dell\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_ofs"},{"name":"subSuite","value":"TestOfs"},{"name":"host","value":"DESKTOP-LPVFBLF"},{"name":"thread","value":"16788-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_ofs"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"98119862ac68f7d5.json","parameterValues":[]}